syntax = "proto3";
package analyticframework;


// InputStream holds the  video stream to be processed by an analytic
message InputStream{
  bytes stream = 1;
  int64 start_time_millis = 2;
  int64 end_time_millis = 3;
}

message Point{
  int32 x = 1;
  int32 y = 2;
}

message RegionOfInterest{
  oneof localization {
    BoundingBox box = 1;
    PixelMask mask  = 2;
  }

  string classification = 5;
  float condifence = 3;
  string supplement = 4;
}

message PixelMask{
  repeated Point pixel = 1;
}

message BoundingBox{
  Point corner = 1;
  int32 height = 2;
  int32 width = 3;
}

// ProcessedStream holds metadata about the processed video
message ProcessedStream{
  bytes stream = 1;
  int64 start_frame = 2;
  int64 end_frame = 3;
  repeated string operations = 4;
  repeated RegionOfInterest roi = 5;
}

message InputFrame{
  bytes frame = 1;
  int64 frame_num = 2;    // The number of the frame if indexed
  float timestamp = 3;  // The timestamp of the frame in the video
}

message FrameData{
  repeated RegionOfInterest roi = 1;
}

service Analytic {
  rpc ProcessVideoStream(stream InputStream) returns (stream ProcessedStream);
  rpc ProcessVideoFrame(InputFrame) returns (FrameData);
}
