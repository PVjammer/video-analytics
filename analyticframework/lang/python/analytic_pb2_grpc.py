# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import analytic_pb2 as analytic__pb2


class AnalyticStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ProcessVideoStream = channel.stream_stream(
        '/analyticframework.Analytic/ProcessVideoStream',
        request_serializer=analytic__pb2.InputStream.SerializeToString,
        response_deserializer=analytic__pb2.ProcessedStream.FromString,
        )
    self.ProcessVideoFrame = channel.unary_unary(
        '/analyticframework.Analytic/ProcessVideoFrame',
        request_serializer=analytic__pb2.InputFrame.SerializeToString,
        response_deserializer=analytic__pb2.FrameData.FromString,
        )


class AnalyticServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ProcessVideoStream(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ProcessVideoFrame(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AnalyticServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ProcessVideoStream': grpc.stream_stream_rpc_method_handler(
          servicer.ProcessVideoStream,
          request_deserializer=analytic__pb2.InputStream.FromString,
          response_serializer=analytic__pb2.ProcessedStream.SerializeToString,
      ),
      'ProcessVideoFrame': grpc.unary_unary_rpc_method_handler(
          servicer.ProcessVideoFrame,
          request_deserializer=analytic__pb2.InputFrame.FromString,
          response_serializer=analytic__pb2.FrameData.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'analyticframework.Analytic', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
